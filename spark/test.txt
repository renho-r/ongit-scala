wget http://download.labs.sogou.com/dl/sogoulabdown/SogouQ/SogouQ.mini.tar.gz
var textFile = sc.textFile("/home/hadoop/SogouQ.sample")
textFile.count
textFile.collect().foreach(println)
textFile.map(_.split("\t"))
textFile.map(_.split("\t")).collect().foreach(s => println(s(0)))
textFile.map(_.split("\t")).collect().foreach(s => println(s(1)))
textFile.map(_.split("\t")).collect().foreach(s => println(s(2)))
textFile.map(_.split("\t")).collect().foreach(s => println(s(3)))
textFile.map(_.split("\t")).collect().foreach(s => println(s(5)))

var fRdd = textFile.map(_.split("\t")).filter(_.length == 6)
fRdd.count
//搜索结果排名第一同时点击结果排名
var filteredRdd = fRdd.filter(_(3).toInt == 1).filter(_(4).toInt == 1)
filteredRdd.count
filteredRdd.collect().foreach(ss => println(ss(1) + ss(2)))
//用户ID查询次数排行榜
var userSTopRdd = fRdd.map(d => (d(1), 1)).reduceByKey((a, b) => (a + b))
userSTopRdd.count
userSTopRdd.collect().foreach(println)
userSTopRdd.collect().foreach(d => println(d._1 + ":" + d._2))
var sortedRdd = userSTopRdd.map(a => (a._2, a._1)).sortByKey(false).map(a => (a._2, a._1))
sortedRdd.collect().foreach(println)

sortedRdd.saveAsTextFile("/home/hadoop/result")
sortedRdd.saveAsTextFile("hdfs://master:9000/spark/out/sogou")
hadoop dfs -getmerge hdfs://[filename] ***.crc??????????

sortedRdd.take(10)//获取前n个元素

var sqlContext = new org.apache.spark.sql.SQLContext(sc)
import sqlContext.implicits._
case class SoGou(aTime: String, id: Long, qw: String, rnum: Integer, cnum: Integer, url: String)
var logs = sc.textFile("/home/hadoop/SogouQ.sample").map(_.split("\t")).map(s => SoGou(s(0), s(1).trim.toLong, s(2), s(3).trim.toInt, s(4).trim.toInt, s(5))).toDF()
logs.count
logs.first
var sLogs = logs.sort("cnum")
var sLogs = logs.sort("cnum")
var sLogs = logs.sort($"cnum".desc)
logs.registerTempTable("logsTb")
var urls = sqlContext.sql("SELECT url FROM logsTb")
urls.first
urls.take(10)
urls.printSchema
var idCount = sqlContext.sql("SELECT id id, count(*) c FROM logsTb group by id")
idCount.show
var temp = sqlContext.sql("SELECT id id, count(*) c FROM logsTb group by id")
var max = sqlContext.sql("SELECT MAX(temptb.c) from (SELECT id id, count(*) c FROM logsTb group by id) temptb")
var ob = sqlContext.sql("SELECT * from (SELECT id id, count(*) c FROM logsTb group by id) temptb order by c desc")

var mu = sqlContext.sql("SELECT * FROM logsTb where id = 1011517038707826")
var rec = sqlContext.sql("SELECT * FROM logsTb where rnum = cnum")
var rec = sqlContext.sql("SELECT * FROM logsTb where rnum = cnum and rnum = 1")